components:
  schemas:
    Cart:
      type: object
      properties:
        userId:
          type: string
          description: User ID reference
        products:
          type: array
          description: List of products in the cart
          items:
            type: object
            properties:
              product:
                type: string
                description: Product ID reference
              quantity:
                type: number
                description: Quantity of the product
        expiresAt:
          type: string
          format: date-time
          description: Expiration date of the cart
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the cart was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the cart was last updated
      required:
        - products
      example:
        userId: "60d21b4667d0d8992e610c85"
        products:
          - product: "60d21b4667d0d8992e610c86"
            quantity: 2
          - product: "60d21b4667d0d8992e610c87"
            quantity: 1

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: tokenCookie
      description: JWT token stored in cookies for authentication.

  responses:
    Unauthorized:
      description: Unauthorized, authentication required.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "User not authenticated"

    BadRequest:
      description: Bad request, missing or invalid parameters.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Invalid request parameters"

    NotFound:
      description: Resource not found.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Resource not found"

    InternalServerError:
      description: Internal server error.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Something went wrong"

    GetCartsSuccess:
      description: List of carts retrieved successfully.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Carts retrieved successfully"
              carts:
                type: array
                items:
                  $ref: "#/components/schemas/Cart"
    CreateCartSuccess:
      description: Cart created successfully.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Cart created successfully"
              cart:
                $ref: "#/components/schemas/Cart"

paths:
  /api/carts:
    post:
      summary: Create an empty cart.
      tags:
        - Cart
      responses:
        "201":
          $ref: '#/components/responses/CreateCartSuccess'
        "500":
          $ref: '#/components/responses/InternalServerError'

    get:
      summary: Get all carts (Admin only).
      tags:
        - Cart
      security:
        - cookieAuth: []
      responses:
        "200":
          $ref: '#/components/responses/GetCartsSuccess'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /api/carts/{cid}:
    get:
      summary: Get a cart by ID.
      tags:
        - Cart
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart ID
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/GetCartSuccess'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update a cart.
      tags:
        - Cart
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: string
                      quantity:
                        type: number
      responses:
        "200":
          $ref: '#/components/responses/UpdateCartSuccess'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /api/carts/{cid}/purchase:
    post:
      summary: Complete a purchase for a cart.
      tags:
        - Cart
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart ID
          schema:
            type: string
      responses:
        "200":
          $ref: '#/components/responses/PurchaseSuccess'
        "400":
          $ref: '#/components/responses/BadRequest'
        "403":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /api/carts/clear:
    delete:
      summary: Clear all products from the cart.
      tags:
        - Cart
      responses:
        "200":
          description: Cart cleared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Cart cleared successfully"
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
