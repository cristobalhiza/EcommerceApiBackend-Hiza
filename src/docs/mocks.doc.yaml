components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: tokenCookie

paths:
  /api/mocks/{users}/{products}:
    get:
      summary: Generate mock user and product data in carts (Admin Only)
      description: Generates a specific number of mock users with shopping carts containing up to a specified number of products. Requires **admin** role.
      tags:
        - Mocks
      security:
        - cookieAuth: []
      parameters:
        - name: users
          in: path
          required: true
          description: Number of mock users to generate.
          schema:
            type: number
            minimum: 1
            example: 5
        - name: products
          in: path
          required: true
          description: Maximum number of products in each user's cart.
          schema:
            type: number
            minimum: 1
            example: 10
      responses:
        "201":
          description: Mock data successfully generated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Mock data created!"
                  mockUsers:
                    type: array
                    items:
                      type: object
                      properties:
                        user:
                          type: object
                          properties:
                            first_name:
                              type: string
                              example: "Juan"
                            last_name:
                              type: string
                              example: "Burro"
                            email:
                              type: string
                              example: "juanburro@example.com"
                            age:
                              type: integer
                              example: 30
                            role:
                              type: string
                              example: "user"
                        cart:
                          type: object
                          properties:
                            userId:
                              type: string
                              example: "60d21b4667d0d8992e610c85"
                            products:
                              type: array
                              items:
                                type: object
                                properties:
                                  product:
                                    type: string
                                    example: "60d21b4967d0d8992e610c86"
                                  title:
                                    type: string
                                    example: "Smartphone XYZ"
                                  price:
                                    type: number
                                    example: 299.99
                                  category:
                                    type: string
                                    example: "Electronics"
                                  quantity:
                                    type: integer
                                    example: 2
        "400":
          description: Invalid parameters or incorrect request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid parameters. They must be numbers greater than 0."
        "401":
          description: Unauthorized - User is not authenticated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: User is not authenticated."
        "403":
          description: Forbidden - User does not have admin access.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Forbidden: Admin access required."
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unexpected server error."
